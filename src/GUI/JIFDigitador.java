package GUI;

import Domain.Analizador.Solicitud;
import Domain.Sistema.SistemaSingleton;
import Utility.GestorCorreo;

import java.awt.Dimension;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

public class JIFDigitador extends javax.swing.JInternalFrame {

    private List<Solicitud> datos;
    private int oldDatosCount;
    private boolean flag_actualizar;
    private boolean flag_datosActualizados;

    private Thread hiloActualizarDatos;
    protected boolean hiloActualizarDatos_running;

    private Thread hiloActualizarGUI;
    protected boolean hiloActualizarGUI_running;

    private File archivo;

    public JIFDigitador() {
        initComponents();
        Dimension jfSize = JFWindow.getInstance().getSize();
        Dimension jifSize = this.getSize();
        this.setLocation((jfSize.width - jifSize.width) / 2, (((jfSize.height - JFWindow.getInstance().jF_jMenuBar.getHeight()) - jifSize.height) / 2));
        this.show();
        this.jLabelActualizando.setText("");
        initThreads();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelCrearSolicitud = new javax.swing.JPanel();
        jTextFieldURL = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButtonEnviarSolicitud = new javax.swing.JButton();
        jLabelURL = new javax.swing.JLabel();
        jPanelMisSolicitudes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSolicitudes = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jLabelEstado_URL = new javax.swing.JLabel();
        jTextFieldEstado_URL = new javax.swing.JTextField();
        jLabelEstado_Estado = new javax.swing.JLabel();
        jTextFieldEstado_Estado = new javax.swing.JTextField();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabelEstado_Analista = new javax.swing.JLabel();
        jLabelEstado_Digitador = new javax.swing.JLabel();
        jTextFieldEstado_Analista = new javax.swing.JTextField();
        jTextFieldEstado_Digitador = new javax.swing.JTextField();
        jButtonVerGrafico = new javax.swing.JButton();
        jButtonAbrirCarpeta = new javax.swing.JButton();
        jButtonVerDatos = new javax.swing.JButton();
        jLabelActualizando = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldAsunto = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaContenido = new javax.swing.JTextArea();
        jLabelNombreArchivo = new javax.swing.JLabel();
        jButtonSeleccionarArchivo = new javax.swing.JButton();
        jButtonEnviarCorreo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListDestinatarios = new javax.swing.JList<>();
        jLabelAsunto = new javax.swing.JLabel();
        jLabelDestinatario = new javax.swing.JLabel();
        jLabelContenido1 = new javax.swing.JLabel();
        jButtonAgregarDestinatario = new javax.swing.JButton();
        jTextFieldDestinatario = new javax.swing.JTextField();
        jButtonEliminarDestinatario = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaCorreosEnviados = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        setTitle("Digitador: "+SistemaSingleton.getInstance().getUsuario().getUsername());
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jCheckBox1.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox1.setText("Análisis de Elementos");

        jCheckBox2.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox2.setText("Análisis de Elementos y Extracción");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox3.setText("Análisis de Elementos y Comparación");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jButtonEnviarSolicitud.setText("Enviar");
        jButtonEnviarSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarSolicitudActionPerformed(evt);
            }
        });

        jLabelURL.setForeground(new java.awt.Color(0, 0, 0));
        jLabelURL.setText("URL:");

        javax.swing.GroupLayout jPanelCrearSolicitudLayout = new javax.swing.GroupLayout(jPanelCrearSolicitud);
        jPanelCrearSolicitud.setLayout(jPanelCrearSolicitudLayout);
        jPanelCrearSolicitudLayout.setHorizontalGroup(
            jPanelCrearSolicitudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCrearSolicitudLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCrearSolicitudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCrearSolicitudLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonEnviarSolicitud))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCrearSolicitudLayout.createSequentialGroup()
                        .addComponent(jLabelURL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                        .addGroup(jPanelCrearSolicitudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox3)
                            .addComponent(jTextFieldURL, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanelCrearSolicitudLayout.setVerticalGroup(
            jPanelCrearSolicitudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCrearSolicitudLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCrearSolicitudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelURL))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 295, Short.MAX_VALUE)
                .addComponent(jButtonEnviarSolicitud)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Crear solicitud", jPanelCrearSolicitud);

        jListSolicitudes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListSolicitudesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListSolicitudes);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabelEstado_URL.setForeground(new java.awt.Color(0, 0, 0));
        jLabelEstado_URL.setText("URL:");

        jTextFieldEstado_URL.setEditable(false);
        jTextFieldEstado_URL.setEnabled(false);

        jLabelEstado_Estado.setForeground(new java.awt.Color(0, 0, 0));
        jLabelEstado_Estado.setText("Estado:");

        jTextFieldEstado_Estado.setEditable(false);
        jTextFieldEstado_Estado.setEnabled(false);
        jTextFieldEstado_Estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEstado_EstadoActionPerformed(evt);
            }
        });

        jCheckBox4.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox4.setText("Análisis de Elementos");
        jCheckBox4.setEnabled(false);

        jCheckBox5.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox5.setText("Análisis de Elementos y Extracción");
        jCheckBox5.setEnabled(false);
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox6.setText("Análisis de Elementos y Comparación");
        jCheckBox6.setEnabled(false);
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jLabelEstado_Analista.setForeground(new java.awt.Color(0, 0, 0));
        jLabelEstado_Analista.setText("Analista:");

        jLabelEstado_Digitador.setForeground(new java.awt.Color(0, 0, 0));
        jLabelEstado_Digitador.setText("Digitador:");

        jTextFieldEstado_Analista.setEditable(false);
        jTextFieldEstado_Analista.setEnabled(false);

        jTextFieldEstado_Digitador.setEditable(false);
        jTextFieldEstado_Digitador.setEnabled(false);
        jTextFieldEstado_Digitador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEstado_DigitadorActionPerformed(evt);
            }
        });

        jButtonVerGrafico.setText("Ver Gráfico");
        jButtonVerGrafico.setEnabled(false);
        jButtonVerGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerGraficoActionPerformed(evt);
            }
        });

        jButtonAbrirCarpeta.setText("Abrir Carpeta");
        jButtonAbrirCarpeta.setEnabled(false);
        jButtonAbrirCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbrirCarpetaActionPerformed(evt);
            }
        });

        jButtonVerDatos.setText("Ver Datos");
        jButtonVerDatos.setEnabled(false);
        jButtonVerDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEstado_Estado)
                            .addComponent(jLabelEstado_URL))
                        .addGap(32, 32, 32)
                        .addComponent(jTextFieldEstado_URL, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEstado_Analista)
                            .addComponent(jLabelEstado_Digitador))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEstado_Digitador, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextFieldEstado_Estado, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldEstado_Analista, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox6)
                            .addComponent(jCheckBox5)
                            .addComponent(jCheckBox4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonVerDatos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAbrirCarpeta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonVerGrafico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEstado_URL)
                    .addComponent(jTextFieldEstado_URL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelEstado_Estado)
                            .addComponent(jTextFieldEstado_Estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelEstado_Analista)
                            .addComponent(jTextFieldEstado_Analista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelEstado_Digitador)
                            .addComponent(jTextFieldEstado_Digitador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonVerGrafico)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jButtonAbrirCarpeta)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonVerDatos)
                            .addComponent(jCheckBox6))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelActualizando.setForeground(new java.awt.Color(0, 0, 0));
        jLabelActualizando.setText("[Actualizando]");

        javax.swing.GroupLayout jPanelMisSolicitudesLayout = new javax.swing.GroupLayout(jPanelMisSolicitudes);
        jPanelMisSolicitudes.setLayout(jPanelMisSolicitudesLayout);
        jPanelMisSolicitudesLayout.setHorizontalGroup(
            jPanelMisSolicitudesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMisSolicitudesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMisSolicitudesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMisSolicitudesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelActualizando)))
                .addContainerGap())
        );
        jPanelMisSolicitudesLayout.setVerticalGroup(
            jPanelMisSolicitudesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMisSolicitudesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelActualizando)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mis solicitudes", jPanelMisSolicitudes);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });

        jTextAreaContenido.setColumns(20);
        jTextAreaContenido.setRows(5);
        jScrollPane2.setViewportView(jTextAreaContenido);

        jLabelNombreArchivo.setForeground(new java.awt.Color(0, 0, 0));
        jLabelNombreArchivo.setText("[Archvo no seleccionado]");

        jButtonSeleccionarArchivo.setText("Agregar Archivo");
        jButtonSeleccionarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionarArchivoActionPerformed(evt);
            }
        });

        jButtonEnviarCorreo.setText("Enviar");
        jButtonEnviarCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarCorreoActionPerformed(evt);
            }
        });

        jListDestinatarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListDestinatarios.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListDestinatariosValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jListDestinatarios);

        jLabelAsunto.setForeground(new java.awt.Color(0, 0, 0));
        jLabelAsunto.setText("Asunto:");

        jLabelDestinatario.setForeground(new java.awt.Color(0, 0, 0));
        jLabelDestinatario.setText("Destinatario:");

        jLabelContenido1.setForeground(new java.awt.Color(0, 0, 0));
        jLabelContenido1.setText("Contenido:");

        jButtonAgregarDestinatario.setText("+");
        jButtonAgregarDestinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarDestinatarioActionPerformed(evt);
            }
        });

        jButtonEliminarDestinatario.setText("-");
        jButtonEliminarDestinatario.setEnabled(false);
        jButtonEliminarDestinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarDestinatarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonEnviarCorreo))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabelContenido1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabelNombreArchivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonSeleccionarArchivo))
                            .addComponent(jScrollPane2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAsunto)
                            .addComponent(jLabelDestinatario))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDestinatario)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                            .addComponent(jTextFieldAsunto))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAgregarDestinatario)
                    .addComponent(jButtonEliminarDestinatario, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDestinatario)
                    .addComponent(jTextFieldDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAgregarDestinatario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonEliminarDestinatario)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabelAsunto)
                        .addGap(6, 6, 6))
                    .addComponent(jTextFieldAsunto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabelContenido1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSeleccionarArchivo)
                    .addComponent(jLabelNombreArchivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEnviarCorreo)
                .addContainerGap())
        );

        jTextAreaCorreosEnviados.setEditable(false);
        jTextAreaCorreosEnviados.setColumns(20);
        jTextAreaCorreosEnviados.setRows(5);
        jScrollPane4.setViewportView(jTextAreaCorreosEnviados);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Enviar Correos", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jButtonEnviarSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarSolicitudActionPerformed
        // TODO add your handling code here:
        if (this.jTextFieldURL.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "La url está vacía", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            Solicitud solicitud = new Solicitud(
                    this.jTextFieldURL.getText(),
                    this.jCheckBox1.isSelected(),
                    this.jCheckBox2.isSelected(),
                    this.jCheckBox3.isSelected());
            if (solicitud.esValida()) {
                if (SistemaSingleton.getInstance().urlValida(solicitud.getUrl())) {
                    if (SistemaSingleton.getInstance().agregarSolicitud(solicitud)) {
                        JOptionPane.showMessageDialog(this, "Solicitud enviada", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                        this.jTextFieldURL.setText("");
                        this.jCheckBox1.setSelected(false);
                        this.jCheckBox2.setSelected(false);
                        this.jCheckBox3.setSelected(false);
                    } else {
                        JOptionPane.showMessageDialog(this, "Solicitud no enviada", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Url inválida", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione al menos un tipo de análisis", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }

        }
    }//GEN-LAST:event_jButtonEnviarSolicitudActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        JFWindow.getInstance().jF_jMenuItemCrearSolicitud.setEnabled(true);
        killThreads();
    }//GEN-LAST:event_formInternalFrameClosed

    private void jButtonVerGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerGraficoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButtonVerGraficoActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jTextFieldEstado_EstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEstado_EstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEstado_EstadoActionPerformed

    private void jListSolicitudesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListSolicitudesValueChanged
        // TODO add your handling code here:
        if (!this.jListSolicitudes.isSelectionEmpty()) {
            String listText = this.jListSolicitudes.getSelectedValue();
            for (Solicitud solicitud : datos) {
                if (solicitud.getUrl().equals(listText)) {
                    this.jTextFieldEstado_URL.setText(solicitud.getUrl());
                    this.jTextFieldEstado_Estado.setText(solicitud.getEstado());
                    this.jTextFieldEstado_Analista.setText(solicitud.getAnalista());
                    this.jTextFieldEstado_Digitador.setText(solicitud.getDigitador());
                    this.jCheckBox4.setSelected(solicitud.doAnalisis1());
                    this.jCheckBox5.setSelected(solicitud.doAnalisis2());
                    this.jCheckBox6.setSelected(solicitud.doAnalisis3());
                    if (solicitud.getEstado().equals(Utility.Utility.ESTADO_FINALIZADO)) {
                        this.jButtonVerGrafico.setEnabled(true);
                        this.jButtonAbrirCarpeta.setEnabled(true);
                        this.jButtonVerDatos.setEnabled(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jListSolicitudesValueChanged

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButtonAbrirCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbrirCarpetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAbrirCarpetaActionPerformed

    private void jButtonVerDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerDatosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonVerDatosActionPerformed

    private void jTextFieldEstado_DigitadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEstado_DigitadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEstado_DigitadorActionPerformed

    private void jButtonSeleccionarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionarArchivoActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileFilter() {
            public String getDescription() {
                return "PDF Documents (*.pdf)";
            }

            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                } else {
                    return f.getName().toLowerCase().endsWith(".pdf");
                }
            }
        });

        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (chooser.showOpenDialog(this) != JFileChooser.CANCEL_OPTION) {
            this.archivo = chooser.getSelectedFile();
            if (this.archivo.getName().endsWith("pdf")) {
                jLabelNombreArchivo.setText(this.archivo.getName());
            } else {
                JOptionPane.showMessageDialog(this, "Solo se pueden elegir archivos en formato PDF");
                this.archivo = null;
            }
        }


    }//GEN-LAST:event_jButtonSeleccionarArchivoActionPerformed

    private void jButtonEnviarCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarCorreoActionPerformed
        // TODO add your handling code here:

        if (archivo != null) {
            if (this.jListDestinatarios.getModel().getSize() == 0) {
                JOptionPane.showMessageDialog(this, "Agregue un destinatario", "Advertencia", JOptionPane.WARNING_MESSAGE);
            } else {
                for (int i = 0; i < this.jListDestinatarios.getModel().getSize(); i++) {
                    if (GestorCorreo.sendEmail(this.jListDestinatarios.getModel().getElementAt(i), this.jTextFieldAsunto.getText(), this.jTextAreaContenido.getText(), archivo)) {
                        System.out.println("Correo enviado  " + i);
                        this.jTextAreaCorreosEnviados.append("Correo enviado a " + this.jListDestinatarios.getModel().getElementAt(i) + "\n");
                    } else {
                        this.jTextAreaCorreosEnviados.append("Error al enviar a " + this.jListDestinatarios.getModel().getElementAt(i) + "\n");
                    }
                }
                this.jTextFieldAsunto.setText("");
                this.jTextAreaContenido.setText("");
                this.jLabelNombreArchivo.setText("[Archvo no seleccionado]");
                this.archivo = null;
                jListDestinatarios.setModel(new javax.swing.AbstractListModel<String>() {
                    String[] strings = new String[0];

                    public int getSize() {
                        return strings.length;
                    }

                    public String getElementAt(int i) {
                        return strings[i];
                    }
                });
                this.jButtonEliminarDestinatario.setEnabled(false);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un archivo", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEnviarCorreoActionPerformed

    private void jButtonAgregarDestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarDestinatarioActionPerformed
        // TODO add your handling code here:
        String email = this.jTextFieldDestinatario.getText();
        if (!email.isBlank()) {
            // Patrón para validar el email
            Pattern pattern = Pattern.compile("([a-z0-9]+(\\.?[a-z0-9])*)+@(([a-z]+)\\.([a-z]+))+");

            Matcher mather = pattern.matcher(email);

            if (mather.find() == true) {
                List<String> datos = new ArrayList<>();
                boolean exists = false;
                for (int i = 0; i < this.jListDestinatarios.getModel().getSize(); i++) {
                    if (this.jListDestinatarios.getModel().getElementAt(i).equals(email)) {
                        exists = true;
                    } else {
                        datos.add(this.jListDestinatarios.getModel().getElementAt(i));
                    }
                }
                datos.add(email);
                if (exists) {
                    JOptionPane.showMessageDialog(this, "Destinatario ya ingresado", "Advertencia", JOptionPane.WARNING_MESSAGE);
                } else {
                    this.jTextFieldDestinatario.setText("");
                }

                String[] strings = datos.toArray(new String[0]);
                jListDestinatarios.setModel(new javax.swing.AbstractListModel<String>() {

                    public int getSize() {
                        return strings.length;
                    }

                    public String getElementAt(int i) {
                        return strings[i];
                    }
                });
            } else {
                JOptionPane.showMessageDialog(this, "Correo inválido", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAgregarDestinatarioActionPerformed

    private void jButtonEliminarDestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarDestinatarioActionPerformed
        // TODO add your handling code here:
        String destinatarioSeleccionado = this.jListDestinatarios.getSelectedValue();
        if (!destinatarioSeleccionado.isBlank()) {
            String[] strings = new String[this.jListDestinatarios.getModel().getSize() - 1];
            for (int i = 0; i < this.jListDestinatarios.getModel().getSize(); i++) {
                if (!this.jListDestinatarios.getModel().getElementAt(i).equals(destinatarioSeleccionado)) {
                    strings[i] = this.jListDestinatarios.getModel().getElementAt(i);
                }
            }

            jListDestinatarios.setModel(new javax.swing.AbstractListModel<String>() {

                public int getSize() {
                    return strings.length;
                }

                public String getElementAt(int i) {
                    return strings[i];
                }
            });
        }


    }//GEN-LAST:event_jButtonEliminarDestinatarioActionPerformed

    private void jListDestinatariosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListDestinatariosValueChanged
        // TODO add your handling code here:
        if (this.jListDestinatarios.getSelectedIndex() != -1) {
            this.jButtonEliminarDestinatario.setEnabled(true);
        } else {
            this.jButtonEliminarDestinatario.setEnabled(false);
        }
    }//GEN-LAST:event_jListDestinatariosValueChanged

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        // TODO add your handling code here:
        this.jButtonEliminarDestinatario.setEnabled(false);
        this.jListDestinatarios.clearSelection();
    }//GEN-LAST:event_jPanel3MousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbrirCarpeta;
    private javax.swing.JButton jButtonAgregarDestinatario;
    private javax.swing.JButton jButtonEliminarDestinatario;
    private javax.swing.JButton jButtonEnviarCorreo;
    private javax.swing.JButton jButtonEnviarSolicitud;
    private javax.swing.JButton jButtonSeleccionarArchivo;
    private javax.swing.JButton jButtonVerDatos;
    private javax.swing.JButton jButtonVerGrafico;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JLabel jLabelActualizando;
    private javax.swing.JLabel jLabelAsunto;
    private javax.swing.JLabel jLabelContenido1;
    private javax.swing.JLabel jLabelDestinatario;
    private javax.swing.JLabel jLabelEstado_Analista;
    private javax.swing.JLabel jLabelEstado_Digitador;
    private javax.swing.JLabel jLabelEstado_Estado;
    private javax.swing.JLabel jLabelEstado_URL;
    private javax.swing.JLabel jLabelNombreArchivo;
    private javax.swing.JLabel jLabelURL;
    private javax.swing.JList<String> jListDestinatarios;
    private javax.swing.JList<String> jListSolicitudes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelCrearSolicitud;
    private javax.swing.JPanel jPanelMisSolicitudes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaContenido;
    private javax.swing.JTextArea jTextAreaCorreosEnviados;
    private javax.swing.JTextField jTextFieldAsunto;
    private javax.swing.JTextField jTextFieldDestinatario;
    private javax.swing.JTextField jTextFieldEstado_Analista;
    private javax.swing.JTextField jTextFieldEstado_Digitador;
    private javax.swing.JTextField jTextFieldEstado_Estado;
    private javax.swing.JTextField jTextFieldEstado_URL;
    private javax.swing.JTextField jTextFieldURL;
    // End of variables declaration//GEN-END:variables

    private void initThreads() {
        this.datos = new ArrayList<>();
        this.flag_actualizar = false;
        this.flag_datosActualizados = true;

        this.hiloActualizarDatos_running = true;
        this.hiloActualizarDatos = new Thread(new Runnable() {
            @Override
            public void run() {
                while (hiloActualizarDatos_running) {
                    try {
                        int n = 1000;
                        Thread.sleep(n);
                        actualizarDatos();
                    } catch (InterruptedException ex) {
                        Logger.getLogger(JIFDigitador.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                System.out.println(hiloActualizarDatos.getName() + " killed");
            }//run
        }, "hiloActualizarDatos_JIFDigitador");
        this.hiloActualizarDatos.start();

        this.hiloActualizarGUI_running = true;
        this.hiloActualizarGUI = new Thread(new Runnable() {
            @Override
            public void run() {
                while (hiloActualizarDatos_running) {
                    actualizarGUI();
                }
                System.out.println(hiloActualizarGUI.getName() + " killed");
            }//run

        }, "hiloActualizarGUI_JIFDigitador");
        this.hiloActualizarGUI.start();

    }//initThreads

    public synchronized void killThreads() {
        this.hiloActualizarDatos_running = false;
        this.hiloActualizarGUI_running = false;
        this.flag_actualizar = true;
        notifyAll();
    }//killThreads

    private synchronized void actualizarDatos() {
        //request - response
        this.flag_datosActualizados = false;
        if (SistemaSingleton.getInstance().getUsuario() != null) {
            oldDatosCount = datos.size();
            this.datos = SistemaSingleton.getInstance().misDatos(SistemaSingleton.getInstance().getUsuario().getUsername());
            if (datos.size() > oldDatosCount) {
                this.flag_datosActualizados = true;
                this.flag_actualizar = true;
                notifyAll();
            }
        }
    }//actualizarDatos

    private synchronized void actualizarGUI() {
        this.jLabelActualizando.setText("");
        if (!flag_actualizar || !this.flag_datosActualizados) {
            try {
                wait();
            } catch (InterruptedException ex) {
                Logger.getLogger(JIFAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                int n = 200;
                this.jLabelActualizando.setText("Actualizando.");
                Thread.sleep(n);
                this.jLabelActualizando.setText("Actualizando..");
                Thread.sleep(n);
                this.jLabelActualizando.setText("Actualizando...");
                Thread.sleep(n);
                this.jLabelActualizando.setText("Actualizado!");
                this.flag_actualizar = false;
                actualizarLista();
                Thread.sleep(n * 2);
            } catch (InterruptedException ex) {
                Logger.getLogger(JIFDigitador.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//actualizarGUI

    private void actualizarLista() {
        String[] datosLista = new String[this.datos.size()];
        for (Solicitud solicitud : this.datos) {
            datosLista[datos.indexOf(solicitud)] = solicitud.getUrl();
        }
        jListSolicitudes.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return datosLista.length;
            }

            public String getElementAt(int i) {
                return datosLista[i];
            }
        });
    }//actualizarLista

}//class
